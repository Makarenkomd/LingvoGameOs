// <auto-generated />
using System;
using LingvoGameOs.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LingvoGameOs.Db.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250504194441_AddAuthorStringIdInGame")]
    partial class AddAuthorStringIdInGame
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.15");

            modelBuilder.Entity("LingvoGameOs.Db.Models.DevUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DevUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Студент яндекс лицея. Лучший разработчик по версии журнала Babushka",
                            Email = "MaratTest@mail.ru",
                            Login = "MaratTest",
                            Name = "Марат",
                            Password = "_Aa123456"
                        });
                });

            modelBuilder.Entity("LingvoGameOs.Db.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorStringId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CoverImageURL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("GamePlatformId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GameURL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LanguageLevelId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberDownloads")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("TEXT");

                    b.Property<double>("Raiting")
                        .HasColumnType("REAL");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("GamePlatformId");

                    b.HasIndex("LanguageLevelId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            AuthorStringId = "",
                            CoverImageURL = "/img/games/mountain labyrinth-banner.png",
                            Description = "Отправляйтесь в увлекательное путешествие, проходите сказочные лабиринты и создавайте собственные в удобном редакторе.",
                            GamePlatformId = 2,
                            GameURL = "/home/index",
                            LanguageLevelId = 1,
                            LastUpdateDate = new DateTime(2025, 5, 4, 19, 44, 40, 784, DateTimeKind.Utc).AddTicks(6613),
                            NumberDownloads = 1000,
                            PublicationDate = new DateTime(2025, 5, 4, 19, 44, 40, 784, DateTimeKind.Utc).AddTicks(6609),
                            Raiting = 4.5999999999999996,
                            Title = "Горный лабиринт"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            AuthorStringId = "",
                            CoverImageURL = "/img/games/art-object-banner.png",
                            Description = "Супер интересная викторина для компании. Поможет найти арт пространства и расскажет о них много интересного.",
                            GamePlatformId = 1,
                            GameURL = "/home/index",
                            LanguageLevelId = 1,
                            LastUpdateDate = new DateTime(2025, 5, 4, 19, 44, 40, 784, DateTimeKind.Utc).AddTicks(6618),
                            NumberDownloads = 2241,
                            PublicationDate = new DateTime(2025, 5, 4, 19, 44, 40, 784, DateTimeKind.Utc).AddTicks(6618),
                            Raiting = 4.4000000000000004,
                            Title = "Тур-викторина 'Арт объекты Осетии'"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            AuthorStringId = "",
                            CoverImageURL = "/img/games/gameplay-animal.png",
                            Description = "Игра состоит из двух уровней никак не связанных друг с другом. После открытия сайта пользователь попадает на главное окно. Там он может ознакомится с правилами игры, а также просмотреть список лидеров и увидеть свой уровень достижений И зарегистрироваться/войти в аккаунт.",
                            GamePlatformId = 3,
                            GameURL = "http://84.201.144.125:5001",
                            LanguageLevelId = 2,
                            LastUpdateDate = new DateTime(2025, 5, 4, 19, 44, 40, 784, DateTimeKind.Utc).AddTicks(6621),
                            NumberDownloads = 5,
                            PublicationDate = new DateTime(2025, 5, 4, 19, 44, 40, 784, DateTimeKind.Utc).AddTicks(6621),
                            Raiting = 4.2000000000000002,
                            Title = "Собери животное"
                        });
                });

            modelBuilder.Entity("LingvoGameOs.Db.Models.GameGameType", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GameId", "GameTypeId");

                    b.HasIndex("GameTypeId");

                    b.ToTable("GameGameType", (string)null);

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            GameTypeId = 2
                        },
                        new
                        {
                            GameId = 2,
                            GameTypeId = 3
                        },
                        new
                        {
                            GameId = 1,
                            GameTypeId = 1
                        },
                        new
                        {
                            GameId = 2,
                            GameTypeId = 4
                        },
                        new
                        {
                            GameId = 3,
                            GameTypeId = 1
                        },
                        new
                        {
                            GameId = 3,
                            GameTypeId = 3
                        });
                });

            modelBuilder.Entity("LingvoGameOs.Db.Models.GameType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GameTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Словарный запас"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Грамматика"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Аудирование"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Чтение"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Говорение"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Головоломка"
                        });
                });

            modelBuilder.Entity("LingvoGameOs.Db.Models.LanguageLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LanguageLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Начинающий"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Средний"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Продвинутый"
                        });
                });

            modelBuilder.Entity("LingvoGameOs.Db.Models.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Web-Desktop"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Desktop"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Web-Mobile"
                        });
                });

            modelBuilder.Entity("LingvoGameOs.Db.Models.PlayerUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PlayerUsers");
                });

            modelBuilder.Entity("LingvoGameOs.Db.Models.Technology", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Technologys");
                });

            modelBuilder.Entity("LingvoGameOs.Db.Models.Game", b =>
                {
                    b.HasOne("LingvoGameOs.Db.Models.DevUser", "Author")
                        .WithMany("Games")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LingvoGameOs.Db.Models.Platform", "GamePlatform")
                        .WithMany()
                        .HasForeignKey("GamePlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LingvoGameOs.Db.Models.LanguageLevel", "LanguageLevel")
                        .WithMany()
                        .HasForeignKey("LanguageLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("GamePlatform");

                    b.Navigation("LanguageLevel");
                });

            modelBuilder.Entity("LingvoGameOs.Db.Models.GameGameType", b =>
                {
                    b.HasOne("LingvoGameOs.Db.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LingvoGameOs.Db.Models.GameType", "GameType")
                        .WithMany()
                        .HasForeignKey("GameTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("GameType");
                });

            modelBuilder.Entity("LingvoGameOs.Db.Models.DevUser", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
